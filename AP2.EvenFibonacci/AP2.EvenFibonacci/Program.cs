using System;
using System.Collections.Generic;
using System.Linq;

namespace AP2.EvenFibonacci
{
    /*
     * https://projecteuler.net/problem=2
     * Each new term in the Fibonacci sequence is generated by 
     * adding the previous two terms. By starting with 1 and 2, 
     * the first 10 terms will be:
     * 
     * 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
     * 
     * By considering the terms in the Fibonacci sequence whose values 
     * do not exceed four million, find the sum of the even-valued terms.
     */
    class Program
    {
        static void Main(string[] args)
        {
            var fourMillion = 4000000;

            var sum = Fibonacci(fourMillion)
                .Where(IsEven)
                .Sum();

            Console.WriteLine($"Sum: {sum}");

            Console.ReadKey();
        }

        static IEnumerable<int> Fibonacci(int max)
        {
            return Generate(1, 2, (p1, p2) => p1 + p2, result => result > max);
        }

        static bool IsEven(int n)
        {
            return (n & 1) == 0;
        }

        public static IEnumerable<T> Generate<T>(T seed1, T seed2,
            Func<T, T, T> resultSelector,
            Func<T, bool> whenToStop)
        {
            yield return seed1;
            yield return seed2;

            var result = resultSelector(seed1, seed2);

            while (!whenToStop(result))
            {
                yield return result;

                seed1 = seed2;
                seed2 = result;

                result = resultSelector(seed1, seed2);
            }

        }
    }
}
